{"version":3,"sources":["components/TweetPage/TweetPage.module.css","components/AddComment/AddComment.module.css","components/Spinner/Spinner.module.css","components/Likes/Likes.module.css","components/Comment/Comment.module.css","components/Comments/Comments.module.css","components/CommentsContainer/CommentsContainer.module.css","context/tweeetter/tweeetterContext.js","components/NewTweet/NewTweet.js","components/Spinner/Spinner.js","components/Tweet/Tweet.js","components/TweetsContainer/TweetsContainer.js","components/Comment/Comment.js","components/CommentsContainer/CommentsContainer.js","components/AddComment/AddComment.js","components/Likes/Likes.js","components/Comments/Comments.js","components/TweetPage/TweetPage.js","components/NotFound/NotFound.js","components/App/App.js","context/tweeetter/tweeetterReducer.js","context/tweeetter/TweeetterState.js","index.js","components/Tweet/Tweet.module.css"],"names":["module","exports","TweeetterContext","createContext","NewTweet","useContext","postTweet","isLoading","useState","input","setInput","isButtonDisabled","setIsButtonDisabled","useEffect","trim","onSubmit","e","preventDefault","newTweet","id","uuid","user","pic","body","likes","isLiked","comments","date","Intl","DateTimeFormat","month","day","hour","minute","format","Date","type","maxLength","placeholder","value","onChange","target","required","disabled","store","require","Spinner","className","styles","container","spinner","circle","get","Tweet","data","style","likeTweet","to","onClick","imgContainer","src","alt","content","header","username","stats","color","length","TweetsContainer","tweets","TweetsTransition","useTransition","tweet","trail","config","wobbly","from","opacity","transform","enter","AnimatedTweet","animated","map","item","props","key","Comment","comment","text","commentContent","Comments","commentsContainer","AddComment","handleClick","closeModal","addComment","inputRef","useRef","current","focus","modal","form","ref","Likes","handleLike","iconContainer","amount","TweetPage","match","showModal","setShowModal","filter","params","nav","post","tweetText","CommentsContainer","NotFound","App","getTweets","basename","exact","path","render","component","state","action","payload","TweeetterState","useReducer","TweeetterReducer","dispatch","set","a","setLoading","users","posts","fetch","request","json","response","console","log","results","createPosts","setTimeout","generateComments","Number","Math","random","toFixed","i","name","first","last","picture","medium","push","randomDate","start","end","getTime","tweetDate","setDate","getDate","Provider","children","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.65c5b5f2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"TweetPage_nav__3LXI0\",\"iconContainer\":\"TweetPage_iconContainer__3cX5p\",\"container\":\"TweetPage_container__2jMek\",\"header\":\"TweetPage_header__2ekg1\",\"tweetText\":\"TweetPage_tweetText__3Sdyw\",\"stats\":\"TweetPage_stats__91vFL\",\"comments\":\"TweetPage_comments__3aUq-\",\"modal\":\"TweetPage_modal__r9zhb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"AddComment_modal__2_AWA\",\"tweet\":\"AddComment_tweet__1R8pi\",\"body\":\"AddComment_body__29RbU\",\"header\":\"AddComment_header__3nN2a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Spinner_container__3wPbR\",\"spinner\":\"Spinner_spinner__1Neu5\",\"spinnerHide\":\"Spinner_spinnerHide__3i5nw\",\"circle\":\"Spinner_circle__2X_tM\",\"bounce\":\"Spinner_bounce__2YkZc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"likes\":\"Likes_likes__2nliY\",\"amount\":\"Likes_amount__2i97j\",\"iconContainer\":\"Likes_iconContainer__2Kvz2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comment\":\"Comment_comment__2SmJa\",\"commentContent\":\"Comment_commentContent__t-BQh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__2-b4q\",\"iconContainer\":\"Comments_iconContainer__1ru5g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commentsContainer\":\"CommentsContainer_commentsContainer__2E7Ay\"};","import { createContext } from \"react\"\n\nconst TweeetterContext = createContext()\n\nexport default TweeetterContext\n","import React, { useState, useContext, useEffect } from \"react\"\nimport uuid from \"react-uuid\"\n\nimport TweeetterContext from \"../../context/tweeetter/tweeetterContext\"\n\nconst NewTweet = () => {\n   const { postTweet, isLoading } = useContext(TweeetterContext)\n   const [input, setInput] = useState(\"\")\n   const [isButtonDisabled, setIsButtonDisabled] = useState(true)\n\n   const handleChange = (e) => {\n      setInput(e.target.value)\n   }\n\n   // Disallows button if tweet is empty\n   useEffect(() => {\n      if (input.trim() === \"\" || isLoading) setIsButtonDisabled(true)\n      else setIsButtonDisabled(false)\n   }, [input, isLoading])\n\n   const handleSubmit = (e) => {\n      e.preventDefault()\n\n      const newTweet = {\n         id: uuid(),\n         user: \"Demo-User\",\n         pic:\n            \"https://abs.twimg.com/sticky/default_profile_images/default_profile_reasonably_small.png\",\n         body: input,\n         likes: 0,\n         isLiked: false,\n         comments: [],\n         date: Intl.DateTimeFormat(\"en-US\", {\n            month: \"short\",\n            day: \"2-digit\",\n            hour: \"numeric\",\n            minute: \"numeric\",\n         }).format(new Date()),\n      }\n\n      setInput(\"\")\n      postTweet(newTweet)\n   }\n\n   return (\n      <form onSubmit={handleSubmit}>\n         <textarea\n            type=\"text\"\n            maxLength=\"140\"\n            placeholder=\"What's happening?\"\n            value={input}\n            onChange={handleChange}\n            required\n         />\n         <button type=\"submit\" disabled={isButtonDisabled}>\n            Tweet\n         </button>\n      </form>\n   )\n}\nexport default NewTweet\n","import React from \"react\"\n\nimport styles from \"./Spinner.module.css\"\n\nvar store = require(\"store\")\n\nconst Spinner = () => {\n   return (\n      <div className={styles.container}>\n         <div className={styles.spinner}>\n            <div className={styles.circle}></div>\n            <div className={styles.circle}></div>\n            <div className={styles.circle}></div>\n         </div>\n         {!store.get(\"tweets\") ? <h2>Generating Posts...</h2> : null}\n      </div>\n   )\n}\n\nexport default Spinner\n","import React, { useContext } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport styles from \"./Tweet.module.css\"\nimport TweeetterContext from \"../../context/tweeetter/tweeetterContext\"\nimport PropTypes from \"prop-types\"\n\nconst Tweet = ({ data, style }) => {\n  const { likeTweet } = useContext(TweeetterContext)\n  const { id, user, pic, likes, body, isLiked, comments, date } = data\n\n  const handleClick = e => {\n    if (e.target.className === \"far fa-heart\" || e.target.className === \"fas fa-heart\") {\n      e.preventDefault()\n      likeTweet(id)\n    }\n  }\n\n  return (\n    <Link to={`/tweet/${id}`} onClick={handleClick}>\n      <div className={styles.container} style={style}>\n        <div className={styles.imgContainer}>\n          <img src={pic} alt=\"profile-pic\" />\n        </div>\n\n        <div className={styles.content}>\n          <div className={styles.header}>\n            <h4 className={styles.username}>{user}</h4>\n            <small>{date}</small>\n          </div>\n          <p>{body}</p>\n\n          <div className={styles.stats}>\n            <div className={styles.likes} style={isLiked ? { color: \"#E0245E\" } : null}>\n              <i className={isLiked ? \"fas fa-heart\" : \"far fa-heart\"} />\n              <small>{likes}</small>\n            </div>\n\n            <div className={styles.comments}>\n              <i className=\"far fa-comment\" />\n              <small>{comments.length}</small>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Link>\n  )\n}\n\nTweet.propTypes = {\n  data: PropTypes.object.isRequired,\n  style: PropTypes.object.isRequired,\n}\n\nexport default Tweet\n","import React from \"react\"\nimport Tweet from \"../Tweet/Tweet\"\nimport { useTransition, animated, config } from \"react-spring\"\nimport PropTypes from \"prop-types\"\n\nconst TweetsContainer = ({ tweets }) => {\n  const TweetsTransition = useTransition(tweets, tweet => tweet.id, {\n    trail: 100,\n    config: config.wobbly,\n    from: { opacity: 0, transform: \"translateX(-50px)\" },\n    enter: { opacity: 1, transform: \"translateX(0px)\" },\n  })\n\n  const AnimatedTweet = animated(Tweet)\n\n  return (\n    <div className=\"tweetsContainer\">\n      {TweetsTransition.map(({ item, props, key }) => (\n        <AnimatedTweet data={item} style={props} key={key} />\n      ))}\n    </div>\n  )\n}\n\nTweetsContainer.propTypes = {\n  tweets: PropTypes.array.isRequired,\n}\n\nexport default TweetsContainer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport styles from \"./Comment.module.css\"\n\nconst Comment = ({ comment }) => {\n   const { pic, text, user } = comment\n\n   return (\n      <div className={styles.comment}>\n         <img src={pic} alt=\"user\" />\n\n         <div className={styles.commentContent}>\n            <h4>{user}</h4>\n            <p>{text}</p>\n         </div>\n      </div>\n   )\n}\n\nComment.propTypes = {\n   comment: PropTypes.object.isRequired,\n}\n\nexport default Comment\n","import React from \"react\"\nimport uuid from \"react-uuid\"\nimport Comment from \"../Comment/Comment\"\nimport PropTypes from \"prop-types\"\n\nimport styles from \"./CommentsContainer.module.css\"\n\nconst Comments = ({ comments }) => {\n   return (\n      <div className={styles.commentsContainer}>\n         {comments.map((comment) => {\n            return <Comment key={uuid()} comment={comment} />\n         })}\n      </div>\n   )\n}\n\nComments.propTypes = {\n   comments: PropTypes.array.isRequired,\n}\n\nexport default Comments\n","import React, { useState, useContext, useEffect, useRef } from \"react\"\n\nimport styles from \"./AddComment.module.css\"\nimport TweeetterContext from \"../../context/tweeetter/tweeetterContext\"\n\nconst AddComment = ({ handleClick, closeModal, id, user, body }) => {\n   const { addComment } = useContext(TweeetterContext)\n   const [input, setInput] = useState(\"\")\n   const [isButtonDisabled, setIsButtonDisabled] = useState(true)\n   const inputRef = useRef(null)\n\n   const handleChange = (e) => {\n      setInput(e.target.value)\n   }\n\n   // Disallows button if tweet is empty\n   useEffect(() => {\n      if (input.trim() !== \"\") setIsButtonDisabled(false)\n      else setIsButtonDisabled(true)\n   }, [input])\n\n   // Creates new comment and adds it in state\n   const handleSubmit = (e) => {\n      e.preventDefault()\n\n      const comment = {\n         pic:\n            \"https://abs.twimg.com/sticky/default_profile_images/default_profile_reasonably_small.png\",\n         user: \"Demo-User\",\n         text: input,\n      }\n\n      addComment(id, comment)\n      setInput(\"\")\n      closeModal()\n   }\n\n   // Sets focus on the textarea on render\n   useEffect(() => {\n      inputRef.current.focus()\n   }, [])\n\n   return (\n      <div className=\"modal-container\" onClick={handleClick}>\n         <div className={styles.modal}>\n            <div className={styles.header}>\n               <i className=\"fas fa-times fa-lg\" onClick={handleClick} />\n            </div>\n\n            <div className={styles.tweet}>\n               <img\n                  src=\"https://abs.twimg.com/sticky/default_profile_images/default_profile_reasonably_small.png\"\n                  alt=\"user\"\n               />\n\n               <div className={styles.body}>\n                  <h4 className={styles.user}>{user}</h4>\n                  <p className={styles.text}>{body}</p>\n               </div>\n            </div>\n\n            <div className={styles.form}>\n               <form onSubmit={handleSubmit}>\n                  <textarea\n                     placeholder=\"Tweet your reply\"\n                     value={input}\n                     onChange={handleChange}\n                     ref={inputRef}\n                     required\n                  ></textarea>\n                  <button type=\"submit\" disabled={isButtonDisabled}>\n                     Reply\n                  </button>\n               </form>\n            </div>\n         </div>\n      </div>\n   )\n}\n\nexport default AddComment\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport styles from \"./Likes.module.css\"\n\nconst Likes = ({ likes, isLiked, handleLike }) => {\n   return (\n      <div\n         className={styles.likes}\n         style={isLiked ? { color: \"#E0245E\" } : null}\n      >\n         <div className={styles.iconContainer}>\n            <i\n               className={isLiked ? \"fas fa-heart fa-lg\" : \"far fa-heart fa-lg\"}\n               onClick={handleLike}\n            />\n         </div>\n         <h4 className={styles.amount}>{likes}</h4>\n      </div>\n   )\n}\n\nLikes.propTypes = {\n   likes: PropTypes.number.isRequired,\n   isLiked: PropTypes.bool.isRequired,\n   handleLike: PropTypes.func.isRequired,\n}\n\nexport default Likes\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport styles from \"./Comments.module.css\"\n\nconst Comments = ({ handleClick, comments }) => {\n   return (\n      <div className={styles.comments}>\n         <div className={styles.iconContainer}>\n            <i className=\"far fa-comment fa-lg\" onClick={handleClick} />\n         </div>\n         <h4>{comments.length}</h4>\n      </div>\n   )\n}\n\nComments.propTypes = {\n   handleClick: PropTypes.func.isRequired,\n   comments: PropTypes.array.isRequired,\n}\n\nexport default Comments\n","import React, { useState, useContext } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport CommentsContainer from \"../CommentsContainer/CommentsContainer\"\nimport AddComment from \"../AddComment/AddComment\"\nimport Likes from \"../Likes/Likes\"\nimport Comments from \"../Comments/Comments\"\n\nimport styles from \"./TweetPage.module.css\"\nimport TweeetterContext from \"../../context/tweeetter/tweeetterContext\"\n\nconst TweetPage = ({ match }) => {\n   const { tweets, likeTweet } = useContext(TweeetterContext)\n   const [showModal, setShowModal] = useState(false)\n   const tweet = tweets.filter((tweet) => tweet.id === match.params.id)[0]\n\n   const { user, pic, body, likes, comments, isLiked, id, date } = tweet\n\n   // Opens and closes modal\n   const handleClick = (e) => {\n      if (\n         e.target.className === \"fas fa-times fa-lg\" ||\n         e.target.className === \"modal-container\" ||\n         e.target.className === \"far fa-comment fa-lg\"\n      ) {\n         setShowModal(!showModal)\n      }\n   }\n\n   const closeModal = () => {\n      setShowModal(false)\n   }\n\n   const handleLike = (e) => {\n      likeTweet(tweet.id)\n   }\n\n   return (\n      <>\n         <div className={styles.nav}>\n            <Link to={\"/\"}>\n               <div className={styles.iconContainer}>\n                  <i className=\"fas fa-arrow-left fa-lg\"></i>\n               </div>\n            </Link>\n            <h1>Tweet</h1>\n         </div>\n\n         <div className={styles.container}>\n            <div className={styles.header}>\n               <img src={pic} alt=\"profile-pic\" />\n               <h4 className={styles.username}>{user}</h4>\n               <small>{date}</small>\n            </div>\n\n            <div className={styles.post}>\n               <p className={styles.tweetText}>{body}</p>\n            </div>\n\n            <div className={styles.stats}>\n               <Likes\n                  likes={likes}\n                  isLiked={isLiked}\n                  id={id}\n                  handleLike={handleLike}\n               />\n               <Comments handleClick={handleClick} comments={comments} />\n            </div>\n            {comments.length > 0 ? (\n               <CommentsContainer comments={comments} />\n            ) : null}\n         </div>\n\n         {showModal ? (\n            <AddComment\n               handleClick={handleClick}\n               closeModal={closeModal}\n               id={id}\n               user={user}\n               body={body}\n            />\n         ) : null}\n      </>\n   )\n}\n\nexport default TweetPage\n","import React from \"react\"\n\nconst NotFound = () => {\n   return (\n      <div>\n         <h1>404</h1>\n         <h3>Page not found</h3>\n      </div>\n   )\n}\n\nexport default NotFound\n","import React, { useContext, useEffect } from \"react\"\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\nimport NewTweet from \"../NewTweet/NewTweet\"\nimport Spinner from \"../Spinner/Spinner\"\nimport TweetsContainer from \"../TweetsContainer/TweetsContainer\"\nimport TweetPage from \"../TweetPage/TweetPage\"\nimport NotFound from \"../NotFound/NotFound\"\n\nimport TweeetterContext from \"../../context/tweeetter/tweeetterContext\"\n\nfunction App() {\n   const { getTweets, isLoading, tweets } = useContext(TweeetterContext)\n\n   useEffect(() => {\n      getTweets()\n   }, [])\n\n   return (\n      <Router basename=\"/tweeetter\">\n         <div className=\"container\">\n            <Switch>\n               <Route\n                  exact\n                  path=\"/\"\n                  render={(props) => (\n                     <>\n                        <h1>Home</h1>\n                        <NewTweet />\n                        {tweets ? <TweetsContainer tweets={tweets} /> : null}\n                        {isLoading ? <Spinner /> : null}\n                     </>\n                  )}\n               />\n               <Route exact path=\"/tweet/:id\" component={TweetPage} />\n               <Route path=\"/tweeetter\" component={NotFound} />\n            </Switch>\n         </div>\n      </Router>\n   )\n}\n\nexport default App\n","export default (state, action) => {\n   switch (action.type) {\n      case \"SET_LOADING\":\n         return {\n            ...state,\n            isLoading: true,\n         }\n      case \"SET_TWEETS\":\n         return {\n            ...state,\n            tweets: [...state.tweets, ...action.payload],\n            isLoading: false,\n         }\n      case \"POST_TWEET\":\n         return {\n            ...state,\n            tweets: [action.payload, ...state.tweets],\n         }\n      case \"LIKE_TWEET\":\n         return {\n            ...state,\n            tweets: state.tweets.map((tweet) => {\n               if (tweet.id === action.payload) {\n                  if (tweet.isLiked) {\n                     return { ...tweet, isLiked: false, likes: tweet.likes - 1 }\n                  } else {\n                     return { ...tweet, isLiked: true, likes: tweet.likes + 1 }\n                  }\n               } else {\n                  return tweet\n               }\n            }),\n         }\n      case \"ADD_COMMENT\":\n         return {\n            ...state,\n            tweets: state.tweets.map((tweet) => {\n               if (tweet.id === action.payload.id) {\n                  return {\n                     ...tweet,\n                     comments: [action.payload.comment, ...tweet.comments],\n                  }\n               } else {\n                  return tweet\n               }\n            }),\n         }\n      default:\n         return {\n            ...state,\n         }\n   }\n}\n","import React, { useReducer, useEffect } from \"react\"\nimport uuid from \"react-uuid\"\nimport TweeetterContext from \"./tweeetterContext\"\nimport TweeetterReducer from \"./tweeetterReducer\"\n\n// Localstorage library\nvar store = require(\"store\")\n\nconst TweeetterState = (props) => {\n   const initialState = {\n      tweets: [],\n      isLoading: false,\n   }\n\n   const [state, dispatch] = useReducer(TweeetterReducer, initialState)\n\n   // Update localstorage when state.tweets change\n   useEffect(() => {\n      if (state.tweets.length > 0) {\n         store.set(\"tweets\", state.tweets)\n      }\n   }, [state.tweets])\n\n   // Fetches data to fill tweets\n   const getTweets = async () => {\n      setLoading()\n\n      if (!store.get(\"tweets\")) {\n         let users = []\n         let posts = []\n\n         try {\n            const request = await fetch(\n               \"https://jsonplaceholder.typicode.com/posts?_limit=10\"\n            )\n            const response = await request.json()\n            posts = response\n         } catch (e) {\n            console.log(e)\n         }\n\n         try {\n            const request = await fetch(\n               \"https://randomuser.me/api/?exc=gender,location,email,login,registered,dob,phone,cell,nat&results=10\"\n            )\n            const response = await request.json()\n            users = response.results\n         } catch (e) {\n            console.log(e)\n         }\n\n         createPosts(users, posts)\n      } else {\n         setTimeout(() => {\n            dispatch({ type: \"SET_TWEETS\", payload: store.get(\"tweets\") })\n         }, 1500)\n      }\n   }\n\n   // Generates comments\n   const generateComments = async () => {\n      const amount = Number((Math.random() * 8).toFixed())\n\n      let text = []\n      let users = []\n      let comments = []\n\n      try {\n         const request = await fetch(\n            `https://jsonplaceholder.typicode.com/posts?_limit=${amount}`\n         )\n         const response = await request.json()\n         text = response\n      } catch (e) {\n         console.log(e)\n      }\n\n      try {\n         const request = await fetch(\n            `https://randomuser.me/api/?exc=gender,location,email,login,registered,dob,phone,cell,nat&results=${amount}`\n         )\n         const response = await request.json()\n\n         users = response.results\n      } catch (e) {\n         console.log(e)\n      }\n\n      for (let i = 0; i < amount; i++) {\n         let comment = {}\n\n         comment.text = text[i].body\n         comment.user = `${users[i].name.first} ${users[i].name.last}`\n         comment.pic = users[i].picture.medium\n\n         comments.push(comment)\n      }\n\n      return comments\n   }\n\n   // Generates a random date between two dates\n   function randomDate(start, end) {\n      const date = new Date(\n         start.getTime() + Math.random() * (end.getTime() - start.getTime())\n      )\n      return new Intl.DateTimeFormat(\"en-US\", {\n         month: \"short\",\n         day: \"2-digit\",\n         hour: \"numeric\",\n         minute: \"numeric\",\n      }).format(date)\n   }\n\n   // Creates tweets and populates feeds\n   const createPosts = async (users, posts) => {\n      let tweets = []\n      const tweetDate = new Date()\n      tweetDate.setDate(tweetDate.getDate() - 7)\n\n      for (let i = 0; i < users.length; i++) {\n         let tweet = {}\n\n         tweet.id = uuid()\n         tweet.pic = users[i].picture.medium\n         tweet.user = `${users[i].name.first} ${users[i].name.last}`\n         tweet.body = posts[i].body\n         tweet.likes = Number((Math.random() * 30).toFixed()) // Generates random amount of likes between 0 and 30\n         tweet.isLiked = false\n         tweet.comments = await generateComments()\n         tweet.date = randomDate(tweetDate, new Date())\n\n         tweets.push(tweet)\n      }\n\n      dispatch({ type: \"SET_TWEETS\", payload: tweets })\n   }\n\n   // Post new tweet\n   const postTweet = (tweet) => {\n      dispatch({ type: \"POST_TWEET\", payload: tweet })\n   }\n\n   // Like tweet\n   const likeTweet = (id) => {\n      dispatch({ type: \"LIKE_TWEET\", payload: id })\n   }\n\n   // Add comment\n   const addComment = (id, comment) => {\n      dispatch({ type: \"ADD_COMMENT\", payload: { id, comment } })\n   }\n\n   // Set Loading\n   const setLoading = () => dispatch({ type: \"SET_LOADING\" })\n\n   return (\n      <TweeetterContext.Provider\n         value={{\n            tweets: state.tweets,\n            isLoading: state.isLoading,\n            getTweets,\n            postTweet,\n            likeTweet,\n            addComment,\n            randomDate,\n         }}\n      >\n         {props.children}\n      </TweeetterContext.Provider>\n   )\n}\n\nexport default TweeetterState\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App/App'\nimport TweeetterState from './context/tweeetter/TweeetterState'\n\nReactDOM.render(\n   <TweeetterState>\n      <App />\n   </TweeetterState>, document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Tweet_container__1eEZm\",\"header\":\"Tweet_header__29P9D\",\"imgContainer\":\"Tweet_imgContainer__3y0oe\",\"title\":\"Tweet_title__ygZgp\",\"stats\":\"Tweet_stats__3n9Ay\",\"likes\":\"Tweet_likes__2Edel\",\"comments\":\"Tweet_comments__2sE8c\"};"],"sourceRoot":""}